# プロセス詳細
function process_()
{
    cat <<EOF
===process_===
-ps の項目---------------------------------------------
# システムに走っている全てのプロセスを表示
$ ps aux

USER: 実行しているユーザ名
PID: プロセスに割り振られた識別番号。つまりプロセスID
%CPU: CPU使用率
%MEM: メモリ使用率
VSZ: プロセスが確保している仮想メモリサイズ
RSS: 実際に試用されているメモリ量
TTY: 端末名
STAT: プロセスの状態を表示。詳細は下記
START: コマンドが起動した時刻
TIME: プロセスが実行された総実行時間
COMMAND: コマンド名

STATの内訳
S: スリープやユーザからの入力待ち
D: ディスクの入出力待ち
R: 実行可能または実行中
T: サスペンドシグナルを送られて実行中断
Z: ゾンビ状態
<: スケジューリング優先度引き上げ
N: スケジューリング優先度引き下げ
L: メモリのページをロックして利用している
s: セッションリーダである
+: フォアグランドプロセスグループ

-process格納場所について--------------------------------------
# 格納場所
$ cd /proc/[プロセスID]

# コマンドライン引数の参照
$ cat cmdline

# 起動した時のカレントディレクトリへのシンボリックリンクの参照
$ ls -lah cwd

# 起動時の環境変数一覧
$ cat environ

# 起動したプログラムへのシンボリックリンクの参照
$ ls -lah exe

# そのプロセスに関しての全体情報の表示
$ cat status
=============
EOF

}
